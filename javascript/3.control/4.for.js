// 반복문
// for - 반복하는 횟수를 정확이 알고 있는 경우 <--> Array[1000](0~999)
// while - 종료되는 조건을 정확히 알고 있는 경우

// for 동작 방식
// for ( 변수 선언문; 조건식; 증감식) { 실행문 }
// 1. 변수를 선언한다.
// 2. 선언한 변수를 조건식에 대입하여 비교한다.
// 3. 조건식 결과가 true인 경우 실행문을 실행한다.
// 4. 증감식을 실행한다.
// 2 ~ 4 번을 조건이 false가 될때까지 반복한다.

// 단일 for문 <---> 1차원 배열
for (let i = 0; i < 5; i++) {
  console.log(i);
}

console.log("--------------------");

// 중첩 for문 <---> 2차원 배열
for (let i = 0; i < 5; i++) {
  for (let j = 0; j < 5; j++) {
    console.log(i, j);
  }
}

console.log("--------------------");

// i = 0  --> j: 0 ~ 4 까지 반복
// i = 1 -->  j: 0 ~ 4 까지 반복
// i = 2 -->  j: 0 ~ 4 까지 반복
// i = 3 -->  j: 0 ~ 4 까지 반복
// i = 4 -->  j: 0 ~ 4 까지 반복

console.clear();

console.log("--------------------");

// 구구단 2단
/*
  2 * 1 = 2
  2 * 2 = 4
  ...
  2 * 9 = 18
*/
// \t : 탭키 만큼 띄우기
// \n : 라인 개행
for (let i = 2; i < 3; i++) {
  console.log(`구구단 : ${i}단`);
  // let output = "";
  for (let j = 1; j < 10; j++) {
    console.log(`${i} * ${j} = ${i * j}`);
    // output += `${i} * ${j} = ${i * j}\t`;
  }
  // console.log(output);
}

console.log("--------------------");

// i = 2  --> j: 1 ~ 9 까지 반복
// i = 3 -->  j: 1 ~ 9 까지 반복
for (let i = 2; i < 4; i++) {
  let output = ""; // 1 ~ 9 출력코드 중첩
  for (let j = 1; j < 10; j++) {
    output += `${i} * ${j} = ${i * j}\t`; // 123456789
  }
  console.log(output);
}
